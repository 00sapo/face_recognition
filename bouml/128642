format 214
"include" // source::include
  revision 1
  modified_by 2 "sapo"
  // class settings
  
  classdiagramsettings member_max_width 0 end
  
  usecasediagramsettings end
  
  sequencediagramsettings end
  
  collaborationdiagramsettings end
  
  objectdiagramsettings end
  
  componentdiagramsettings
   end
  
  deploymentdiagramsettings
   end
  
  statediagramsettings
   end
  
  activitydiagramsettings
   end
  
  cpp_h_dir "/home/sapo/Develop/face_recognition/source/include/"
  cpp_src_dir "/home/sapo/Develop/face_recognition/source/include/"
  cpp_namespace "face"
  classview 128514 "include"
    
    classdiagramsettings member_max_width 0 end
    
    collaborationdiagramsettings end
    
    objectdiagramsettings end
    
    sequencediagramsettings end
    
    statediagramsettings
     end
    
    
    activitydiagramsettings
     end
    class 128898 "CovarianceComputer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@brief computeCovarianceRepresentation: extracts a normalized covariance matrix based representation
       of an input Face set. Input faces are clusterized in subsets based on their pose
       and then for each subset a pair of covariance matrixes, one for images and the other
       for the depth maps, representative of the set are computed. If this is a leaf
       covariance computer, it computes covariances also for single leaves. Anyway, it does
       not compute covariance for the whole Image4DComponent setted in this Filter, but only
       for its subcomponents.
"
      classrelation 128514 // <generalisation>
	relation 128514 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128514 // <generalisation>
	  b parent class_ref 129026 // Filter
      end

      operation 131330 "CovarianceComputer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 131458 "filter"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 131586 "getImage4DComponent"
	preserve_cpp_body_indent const public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 131714 "setImage4DComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 131842 "isLeafCovarianceComputer"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 131970 "setLeafCovarianceComputer"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "bool"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 132098 "setToNormalizedCovariance"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "set" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief setToCovariance: computes the covariance matrix representation of an Image4DComponent.
                        It is thinked to act on leaves or on components that contains only leaves.
"
      end

      attribute 129794 "leafCovarianceComputer"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 128642 // imageSet (<unidirectional association>)
	relation 128642 --->
	  a role_name "imageSet" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 128642 // imageSet (<unidirectional association>)
	  b parent class_ref 129154 // Image4DComponent
      end
    end

    class 129026 "Filter"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 133506 "filter"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 133634 "getImage4DComponent"
	abstract const cpp_virtual public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 133762 "setImage4DComponent"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end
    end

    class 129154 "Image4DComponent"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 133890 "Image4DComponent"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      operation 134018 "depthForEach"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "function" explicit_type "std::function<void(int, int, boost::any&)>"
	  param in name "ROI" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief depthForEach applies a function to every pixel
       in the ROI of the depth map. Function receives two coordinates (x,y) of
       the pixel and a reference to the pixel
@param function function to be called on each pixel
@param ROI region of interest to which apply function
"
      end

      operation 134146 "imageForEach"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param in name "function" explicit_type "std::function<void(int, int, boost::any&)>"
	  param in name "ROI" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief imageForEach applies the function function to every point
       in the ROI of the image. Function receives two coordinates (x,y) of
       the point in the image and a reference to the point
@param function function to be called on each point
@param ROI region of interest to which apply function
"
      end

      operation 134274 "getImage"
	abstract const cpp_virtual public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 134402 "getDepthMap"
	abstract const cpp_virtual public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 134530 "getHeight"
	abstract const cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getHeight gives the height (in pixels) of image and cloud
       (which have the same dimensions)
@return height of the 4D image
"
      end

      operation 134658 "getWidth"
	abstract const cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getWidth gives the width (in pixels) of image and depthmap
       (which have the same dimensions)
@return width of the 4D image
"
      end

      operation 134786 "getArea"
	abstract const cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getArea gives the area (in pixel) of image and depthMap
       (which have the same dimensions)
@return area of the face
"
      end

      operation 134914 "get3DImage"
	abstract const cpp_virtual public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief get3DImage organizes the depthmap in a Mat object
       with 3 channels (X, Y, Z) using intrinsicMatrix.
@return 3D representation of the face
"
      end

      operation 135042 "crop"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "cropRegion" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief This function crops both the image and the cloud removing
       every point outside the cropping region and adjusting
       the intrinsicMatrix accordingly to take into account the resolution change
@param cropRegion region of interest
"
      end

      operation 135170 "getRotationMatrix"
	abstract const cpp_virtual public explicit_return_type "std::vector<Pose>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getRotationMatrix
@return  a vector of Pose containing all rotation matrix of images in the set
"
      end

      operation 135298 "getEulerAngles"
	abstract const cpp_virtual public explicit_return_type "cv::Vec3f"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 135426 "getPosition"
	abstract const cpp_virtual public explicit_return_type "cv::Vec3f"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 135554 "setEulerAngles"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 135682 "setPosition"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 135810 "getDepthImageRatio"
	abstract const cpp_virtual public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getCloudImageRatio
@return downscaling ratio applied to image by the constructor
"
      end

      operation 135938 "getIntrinsicMatrix"
	abstract const cpp_virtual public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 136066 "getName"
	abstract cpp_virtual public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 136194 "setName"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 136322 "resizeImage"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief resizeImage dowscales the image to match depth map dimensions
"
      end

      operation 136450 "isLeaf"
	abstract const cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief isLeaf
@return true if this component is a leaf, false otherwise
"
      end

      operation 136578 "forEachComponent"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "func" explicit_type "void (*)(Image4DComponent*)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}void (*${p0})(Image4DComponent*)${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief forEachComponent execute function func on each sub component (on this component if it is a leaf)
"
      end

      operation 136706 "size"
	abstract const cpp_virtual public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 136834 "add"
	abstract cpp_virtual public return_type class_ref 129154 // Image4DComponent
	nparams 1
	  param inout name "item" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief add one item to this Image4DComponent
@param item the item to add
@return a pointer to the Image4DComponent resulting
"
      end

      operation 136962 "add"
	abstract cpp_virtual public return_type class_ref 129154 // Image4DComponent
	nparams 2
	  param inout name "item" type class_ref 129154 // Image4DComponent
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief add add one item to the Image4DComponent locted at index i of this Image4DComponent
@param item the item to add
@param i the index at which add the item
@return the Image4DComponent resulting
"
      end

      operation 137090 "clear"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 137218 "at"
	abstract cpp_virtual public return_type class_ref 129154 // Image4DComponent
	nparams 1
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 137346 "begin"
	abstract cpp_virtual public explicit_return_type "std::vector<Image4DComponent*>::iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " method to make range based loops "
      end

      operation 137474 "end"
	abstract cpp_virtual public explicit_return_type "std::vector<Image4DComponent*>::iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 137602 "getImageCovariance"
	abstract const cpp_virtual public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getImageCovariance
@return the covariance of this set of rgb images
"
      end

      operation 137730 "setImageCovariance"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 137858 "getDepthCovariance"
	abstract const cpp_virtual public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "@brief getDepthCovariance
@return the covariance of this set of depth images
"
      end

      operation 137986 "setDepthCovariance"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end
    end

    class 129282 "FaceCropper"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 128770 // <generalisation>
	relation 128770 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128770 // <generalisation>
	  b parent class_ref 129026 // Filter
      end

      operation 132226 "FaceCropper"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 132354 "filter"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 132482 "getImage4DComponent"
	preserve_cpp_body_indent const public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 132610 "setImage4DComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 132738 "getEstimator"
	preserve_cpp_body_indent const public return_type class_ref 128514 // CRForestEstimator
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 132866 "setEstimator"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" type class_ref 128514 // CRForestEstimator
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 132994 "isPoseEstimatorAvailable"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 133122 "removeOutliers"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 133250 "estimateFacePose"
	preserve_cpp_body_indent const private explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 128898 // image4d (<unidirectional association>)
	relation 128898 --->
	  a role_name "image4d" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 128898 // image4d (<unidirectional association>)
	  b parent class_ref 129154 // Image4DComponent
      end

      classrelation 129026 // estimator (<directional composition>)
	relation 129026 *-->
	  a role_name "estimator" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 129026 // estimator (<directional composition>)
	  b parent class_ref 128514 // CRForestEstimator
      end

      attribute 129922 "poseEstimatorAvailable"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 133378 "filterImage4DComponent"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "image4d" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 129666 "Image4DLeaf"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@brief The Image4DLeaf class is a couple (grayscale image - depth map)
       that represents both the visual and spatial information of a scene
"
      classrelation 129154 // <generalisation>
	relation 129154 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129154 // <generalisation>
	  b parent class_ref 129154 // Image4DComponent
      end

      operation 138114 "Image4DLeaf"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "// ---------- constructors ----------

${inline}${class}::${name}${(}${)}
    : WIDTH(0)
    , HEIGHT(0)
    , DEPTH_IMG_RATIO(0)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 138242 "Image4DLeaf"
	public explicit_return_type ""
	nparams 3
	  param inout name "image" explicit_type "cv::Mat"
	  param inout name "depthMap" explicit_type "cv::Mat"
	  param in name "intrinsicCameraMatrix" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, const ${t2} & ${p2}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "@brief Image4dLeaf stores two representations of the same image (depth and rgb) and shrinks
       the image to fit depth map dimensions. Image and depth map must have
       the same aspect ratio and image dimensions must be >= of depth map dimensions
@param image
@param depthMap
@param intrinsicCameraMatrix
"
      end

      operation 138370 "get3DImage"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 138498 "getWidth"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// ---------- public member functions ----------

${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 138626 "getHeight"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 138754 "getArea"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 138882 "getDepthImageRatio"
	preserve_cpp_body_indent const public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 139010 "getIntrinsicMatrix"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 139138 "getName"
	cpp_inline public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
        return name;
    };
"
	
	
	
	
      end

      operation 139266 "setName"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
        this->name = name;
    };
"
	
	
	
	
      end

      operation 139394 "crop"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "cropRegion" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 139522 "depthForEach"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "function" explicit_type "std::function<void(int, int, boost::any&)>"
	  param in name "ROI" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {

        const uint MAX_X = ROI.x + ROI.width;
        const uint MAX_Y = ROI.y + ROI.height;

        std::cout << \"mat type: \" << depthMap.type() << std::endl;
        for (uint y = ROI.y; y < MAX_Y; ++y) {
            for (uint x = ROI.x; x < MAX_X; ++x) {
                function(x, y, depthMap.at<boost::any>(y, x));
            }
        }
    };
"
	
	
	
	
      end

      operation 139650 "imageForEach"
	cpp_inline public explicit_return_type "void"
	nparams 2
	  param in name "function" explicit_type "std::function<void(int, int, boost::any&)>"
	  param in name "ROI" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
        const uint MAX_X = ROI.x + ROI.width;
        const uint MAX_Y = ROI.y + ROI.height;

        for (uint y = ROI.y; y < MAX_Y; ++y) {
            for (uint x = ROI.x; x < MAX_X; ++x) {
                boost::any img = image.at<uint16_t>(y, x);
                function(x, y, img);
            }
        }
    };
"
	
	
	
	
      end

      operation 139778 "getRotationMatrix"
	preserve_cpp_body_indent const public explicit_return_type "std::vector<Pose>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 139906 "getEulerAngles"
	preserve_cpp_body_indent const public explicit_return_type "cv::Vec3f"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140034 "getPosition"
	preserve_cpp_body_indent const public explicit_return_type "cv::Vec3f"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140162 "setEulerAngles"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140290 "setPosition"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140418 "getImage"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140546 "getDepthMap"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140674 "resizeImage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140802 "isLeaf"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 140930 "forEachComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "func" explicit_type "void (*)(Image4DComponent*)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}void (*${p0})(Image4DComponent*)${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}void (*${p0})(Image4DComponent*)${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141058 "size"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141186 "add"
	preserve_cpp_body_indent public return_type class_ref 129154 // Image4DComponent
	nparams 1
	  param inout name "item" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141314 "add"
	preserve_cpp_body_indent public return_type class_ref 129154 // Image4DComponent
	nparams 2
	  param inout name "item" type class_ref 129154 // Image4DComponent
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141442 "begin"
	preserve_cpp_body_indent public explicit_return_type "std::vector<Image4DComponent*>::iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141570 "end"
	preserve_cpp_body_indent public explicit_return_type "std::vector<Image4DComponent*>::iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141698 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141826 "at"
	preserve_cpp_body_indent public return_type class_ref 129154 // Image4DComponent
	nparams 1
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 141954 "getImageCovariance"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 142082 "setImageCovariance"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 142210 "getDepthCovariance"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 142338 "setDepthCovariance"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 130050 "eulerAngles"
	private explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 130178 "position"
	private explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 130306 "image"
	private explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Color or grayscale representation of the face"
      end

      attribute 130434 "depthMap"
	private explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " Depth representation of the face"
      end

      attribute 130562 "name"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 129282 // WIDTH (<directional composition>)
	relation 129282 *-->
	  a role_name "WIDTH" protected
	    comment " width of the face"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 129282 // WIDTH (<directional composition>)
	  b parent class_ref 129410 // uint
      end

      classrelation 129410 // HEIGHT (<directional composition>)
	relation 129410 *-->
	  a role_name "HEIGHT" protected
	    comment " height of the face"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 129410 // HEIGHT (<directional composition>)
	  b parent class_ref 129410 // uint
      end

      attribute 130690 "DEPTH_IMG_RATIO"
	protected explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " downscaling ratio applied to image by the constructor"
      end

      attribute 130818 "intrinsicMatrix"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 130946 "depthCovariance"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 131074 "imageCovariance"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 129794 "Image4DLoader"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@brief The ImageLoader class loads a single image or
       an image sequence with the possibility of specifying
       the filename to load using regular expressions and a
       downscaling ratio to reduce image size.
"
      attribute 131202 "MATCH_ALL"
	class_attribute const_attribute public explicit_type "std::string"
	init_value "= \".*\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 142466 "Image4DLoader"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}
    : Image4DLoader(fs::current_path().string(), \".*(png|jpg|bmp)\")
${throw}{
  ${body}}
"
	
	
	
	
	comment "@brief ImageLoader, basic constructor.

Loads from current directory images with extension .png, .jpg or .bmp
"
      end

      operation 142594 "Image4DLoader"
	public explicit_return_type ""
	nparams 2
	  param in name "dirPath" explicit_type "std::string"
	  param in name "fileNameRegEx" explicit_type "std::string"
	    defaultvalue "MATCH_ALL"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "@brief ImageLoader constructor
@param dirPath: absolute path to the directory from which load the files
@param fileNameTempl: regular expression for the file names to load
"
      end

      operation 142722 "hasNext"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief hasNext
@return true if there are images to load from current directory
"
      end

      operation 142850 "get"
	preserve_cpp_body_indent cpp_virtual public explicit_return_type "bool"
	nparams 1
	  param inout name "image4d" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief get: loads the next image and cloud files available
@param image4d: output image4d
@return true if successfully loaded, false otherwise
"
      end

      operation 142978 "get"
	preserve_cpp_body_indent cpp_virtual public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief get: multithreaded version of get(Image4D& image4d).
       Loads all files using a variable number of threads
       depending on the number of available cores
@return loaded files
"
      end

      operation 143106 "setFileNameRegEx"
	public explicit_return_type "void"
	nparams 1
	  param in name "fileNameRegEx" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief setFileNameRegEx
@param fileNameRegEx: regular expression for the file names to load

Changes the regular expression used for file name matching
"
      end

      operation 143234 "setCurrentPath"
	public explicit_return_type "void"
	nparams 1
	  param in name "dirPath" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief setCurrentPath
@param dirPath: path to a new directory

Changes current path to dirPath
"
      end

      operation 143362 "getLeafSize"
	preserve_cpp_body_indent const public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 143490 "setLeafSize"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 131330 "imageFileNames"
	protected explicit_type "std::string"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 131458 "cloudFileNames"
	protected explicit_type "std::string"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 131586 "leafSize"
	private explicit_type "float"
	init_value "=  0.0f"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "@brief leafSize: not working for now. If it is setted, the images will be filtered with a Voxel Grid filter of this leaf size.


"
      end

      attribute 131714 "currentPath"
	private explicit_type "std::string"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 131842 "fileTemplate"
	private explicit_type "std::regex"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 143618 "loadFileNames"
	private explicit_return_type "bool"
	nparams 1
	  param in name "dirPath" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 143746 "matchTemplate"
	private explicit_return_type "bool"
	nparams 1
	  param in name "fileName" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 143874 "getMultiThr"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 4
	  param inout name "image4DSequence" explicit_type "std::vector<Image4DComponent*>"
	  param in name "begin" explicit_type "int"
	  param in name "end" explicit_type "int"
	  param inout name "mutex" explicit_type "std::mutex"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}, ${t2} ${p2}, ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 129922 "Image4DVectorComposite"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 129538 // <generalisation>
	relation 129538 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129538 // <generalisation>
	  b parent class_ref 129154 // Image4DComponent
      end

      operation 144002 "Image4DVectorComposite"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 144130 "getImage"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getImage returns the first rgb image of this vector
@return
"
      end

      operation 144258 "getDepthMap"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getDepthMap returns the first depth map of this vector
@return
"
      end

      operation 144386 "getHeight"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getHeight
@return the height of the first image of this vector
"
      end

      operation 144514 "getWidth"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getWidth
@return the width of the first image of this vector
"
      end

      operation 144642 "getArea"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getArea
@return the area of the first image of this vector
"
      end

      operation 144770 "get3DImage"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief get3DImage
@return the 3d image of the first image of this vector
"
      end

      operation 144898 "crop"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "cropRegion" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief crop crop all images in the vector
@param cropRegion
"
      end

      operation 145026 "getRotationMatrix"
	preserve_cpp_body_indent const public explicit_return_type "vector<Pose>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getRotationMatrix
@return the rotation matrix of the first image of this vector
"
      end

      operation 145154 "getEulerAngles"
	preserve_cpp_body_indent const public explicit_return_type "cv::Vec3f"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getEulerAngles
@return the euler angles of the first image of this vector
"
      end

      operation 145282 "getPosition"
	preserve_cpp_body_indent const public explicit_return_type "cv::Vec3f"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getPosition
@return position of the first image of this vector
"
      end

      operation 145410 "setEulerAngles"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief setEulerAngles set euler angles for all the images in the vector
@param value
"
      end

      operation 145538 "setPosition"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Vec3f"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief setPosition set the position for all the images in the vector
@param value
"
      end

      operation 145666 "getDepthImageRatio"
	preserve_cpp_body_indent const public explicit_return_type "float"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getDepthImageRatio
@return the ratio of depth image of the first image of this vector
"
      end

      operation 145794 "getIntrinsicMatrix"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getIntrinsicMatrix
@return the intrinsic matrix of the first image of this vector
"
      end

      operation 145922 "getName"
	preserve_cpp_body_indent public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getName
@return the name of the first image of this vector
"
      end

      operation 146050 "setName"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "name" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief setName
@param name set the name of the first image of this vector
"
      end

      operation 146178 "resizeImage"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief resizeImage resize all images of the vector
"
      end

      operation 146306 "isLeaf"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief isLeaf
@return false
"
      end

      operation 146434 "forEachComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "func" explicit_type "void (*)(Image4DComponent*)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}void (*${p0})(Image4DComponent*)${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}void (*${p0})(Image4DComponent*)${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 146562 "getVec"
	preserve_cpp_body_indent const public explicit_return_type "vector<Image4DComponent*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 146690 "setVec"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "vector<Image4DComponent*>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 146818 "size"
	preserve_cpp_body_indent const public explicit_return_type "size_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 146946 "add"
	preserve_cpp_body_indent public return_type class_ref 129154 // Image4DComponent
	nparams 1
	  param inout name "item" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147074 "add"
	preserve_cpp_body_indent public return_type class_ref 129154 // Image4DComponent
	nparams 2
	  param inout name "item" type class_ref 129154 // Image4DComponent
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} & ${p0}, ${t1} ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147202 "begin"
	preserve_cpp_body_indent public explicit_return_type "vector<Image4DComponent*>::iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147330 "end"
	preserve_cpp_body_indent public explicit_return_type "vector<Image4DComponent*>::iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147458 "clear"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147586 "at"
	public return_type class_ref 129154 // Image4DComponent
	nparams 1
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147714 "getImageCovariance"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147842 "setImageCovariance"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 147970 "getDepthCovariance"
	preserve_cpp_body_indent const public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 148098 "setDepthCovariance"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 148226 "depthForEach"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "function" explicit_type "std::function<void(int, int, boost::any&)>"
	  param in name "ROI" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief virtualDepthForEach depthForEach on all images of the vector
@param function
@param ROI
@return
"
      end

      operation 148354 "imageForEach"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "function" explicit_type "std::function<void(int, int, boost::any&)>"
	  param in name "ROI" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief virtualImageForEach
@param function
@param ROI
@return imageForEach on all images of the vector
"
      end

      classrelation 129666 // vec (<unidirectional association>)
	relation 129666 --->
	  stereotype "vector"
	  a role_name "vec" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 129666 // vec (<unidirectional association>)
	  b parent class_ref 129154 // Image4DComponent
      end

      attribute 131970 "depthCovariance"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 132098 "imageCovariance"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 130050 "KmeansBackgroundRemover"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 129794 // <generalisation>
	relation 129794 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129794 // <generalisation>
	  b parent class_ref 129026 // Filter
      end

      operation 148482 "KmeansBackgroundRemover"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "fixedThreshold" explicit_type "uint16_t"
	    defaultvalue "1600"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}
    : fixedThreshold(fixedThreshold)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 148610 "filter"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief filter remove the background on the first 4D image of the set using kmeans
@param image
@return
"
      end

      operation 148738 "getImage4DComponent"
	preserve_cpp_body_indent const public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 148866 "setImage4DComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 148994 "getFixedThreshold"
	preserve_cpp_body_indent const public explicit_return_type "uint16_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149122 "setFixedThreshold"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "uint16_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149250 "getClassifier"
	preserve_cpp_body_indent const public explicit_return_type "cv::CascadeClassifier"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149378 "setClassifier"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "cv::CascadeClassifier"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149506 "isFaceDetectorAvailable"
	preserve_cpp_body_indent const public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 132226 "faceDetectorAvailable"
	private explicit_type "bool"
	init_value "=  false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 132354 "classifier"
	private explicit_type "cv::CascadeClassifier"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 132482 "fixedThreshold"
	private explicit_type "uint16_t"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 129922 // image4d (<unidirectional association>)
	relation 129922 --->
	  a role_name "image4d" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 129922 // image4d (<unidirectional association>)
	  b parent class_ref 129154 // Image4DComponent
      end

      operation 149634 "removeBackgroundFixed"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149762 "removeBackgroundDynamic"
	preserve_cpp_body_indent const private explicit_return_type "void"
	nparams 1
	  param inout name "boundingBox" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149890 "detectForegroundFace"
	preserve_cpp_body_indent private explicit_return_type "bool"
	nparams 1
	  param inout name "boundingBox" explicit_type "cv::Rect"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150018 "filterImage4DComponent"
	class_operation preserve_cpp_body_indent private explicit_return_type "void"
	nparams 1
	  param inout name "image4d" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 130178 "Pose"
      visibility package stereotype "template_typedef"
      cpp_decl "${comment}${template}using ${name} = ${inherit};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 130050 // <generalisation>
	relation 130050 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 130050 // <generalisation>
	  b parent class_ref 130306 // typedef1
      end
    end

    class 130306 "typedef1"
      visibility package stereotype "typedef" explicit_base_type "cv::Matx<float, 9, 1>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 130434 "PoseClusterizer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 130178 // <generalisation>
	relation 130178 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 130178 // <generalisation>
	  b parent class_ref 129026 // Filter
      end

      operation 150146 "PoseClusterizer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "numCenters" explicit_type "int"
	    defaultvalue "3"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}
    : numCenters(numCenters)
${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 150274 "clusterizePoses"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief clusterizePoses: computes the centers of the clusters using an L2
       metric over the poses of input faces
@return true if clusterization succeded
"
      end

      operation 150402 "assignFacesToClusters"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief assignFacesToClusters assigns every face to the nearest cluster center (using L2 metric)
@return pointer to Image4DComponent consisting of Image4DVectorComposite with cluster structure in it
"
      end

      operation 150530 "filter"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150658 "getImage4DComponent"
	preserve_cpp_body_indent const public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150786 "setImage4DComponent"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150914 "getNumCenters"
	preserve_cpp_body_indent const public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 151042 "setNumCenters"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 151170 "getCenters"
	preserve_cpp_body_indent const public explicit_return_type "std::vector<Pose>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 151298 "setCenters"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "std::vector<Pose>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 151426 "getNearestCenterId"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 1
	  param in name "pose" type class_ref 130178 // Pose
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 130306 // imageSet (<unidirectional association>)
	relation 130306 --->
	  a role_name "imageSet" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130306 // imageSet (<unidirectional association>)
	  b parent class_ref 129154 // Image4DComponent
      end

      attribute 132610 "numCenters"
	private explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      classrelation 130434 // centers (<directional composition>)
	relation 130434 *-->
	  stereotype "std::vector"
	  a role_name "centers" private
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	    classrelation_ref 130434 // centers (<directional composition>)
	  b parent class_ref 130178 // Pose
      end
    end

    class 130562 "PreprocessorPipe"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 151554 "PreprocessorPipe"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 151682 "push_back"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "f" type class_ref 129026 // Filter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief push_back add filter f at the end of the pipe
@param f
"
      end

      operation 151810 "insert"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param in name "i" type class_ref 129410 // uint
	  param inout name "f" type class_ref 129026 // Filter
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief insert insert a Filter at position i in the pipe
@param i
@param f
"
      end

      operation 151938 "filterPipeAt"
	preserve_cpp_body_indent public return_type class_ref 129026 // Filter
	nparams 1
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief at
@param i
@return a pointer to the Filter at position i in the pipe
"
      end

      operation 152066 "removeFilter"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "i" type class_ref 129410 // uint
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief removeFilter remove filter
at index i in the pipe. Use std::vector::erase(), it is slow.
@param i
"
      end

      operation 152194 "processPipe"
	preserve_cpp_body_indent public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief processPipe apply filter pipe to the image set
@return true if all filters managed to work, false otherwise
"
      end

      operation 152322 "getFilterPipe"
	preserve_cpp_body_indent const public explicit_return_type "vector<Filter*>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 152450 "setFilterPipe"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "value" explicit_type "vector<Filter*>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 152578 "getImageSet"
	preserve_cpp_body_indent const public return_type class_ref 129154 // Image4DComponent
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} * ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 152706 "setImageSet"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param inout name "value" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} * ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      classrelation 130562 // filterPipe (<unidirectional association>)
	relation 130562 --->
	  stereotype "vector"
	  a role_name "filterPipe" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}*> ${name}${value};
"
	    classrelation_ref 130562 // filterPipe (<unidirectional association>)
	  b parent class_ref 129026 // Filter
      end

      classrelation 130690 // imageSet (<unidirectional association>)
	relation 130690 --->
	  a role_name "imageSet" protected
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} * ${name}${value};
"
	    classrelation_ref 130690 // imageSet (<unidirectional association>)
	  b parent class_ref 129154 // Image4DComponent
      end
    end

    class 130690 "Settings"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 152834 "setCameraInfoPath"
	class_operation preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "pathName" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 152962 "getInstance"
	class_operation preserve_cpp_body_indent public return_type class_ref 130690 // Settings
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} & ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 153090 "getK"
	preserve_cpp_body_indent public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "    ~SingletonSettings();"
      end

      operation 153218 "getD"
	preserve_cpp_body_indent public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 153346 "getP"
	preserve_cpp_body_indent public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 153474 "getR"
	preserve_cpp_body_indent public explicit_return_type "cv::Mat"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}const ${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 153602 "getHeight"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 153730 "getWidth"
	preserve_cpp_body_indent public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 153858 "Settings"
	cpp_deleted public explicit_return_type ""
	nparams 1
	  param in name "" type class_ref 130690 // Settings
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
	comment "void setHeight(int height);
void setWidth(int width);
void setK(Mat K);
void setD(Mat D);
void setP(Mat P);
void setR(Mat R);"
      end

      operation 153986 "operator ="
	cpp_deleted public explicit_return_type "void"
	nparams 1
	  param in name "" type class_ref 130690 // Settings
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 154114 "getFaceDetectorPath"
	preserve_cpp_body_indent const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 154242 "getPoseEstimatorPath"
	preserve_cpp_body_indent const public explicit_return_type "std::string"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 154370 "Settings"
	preserve_cpp_body_indent protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 154498 "readCameraInfo"
	preserve_cpp_body_indent protected explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 132738 "K"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment "Camera parameters

"
      end

      attribute 132866 "D"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 132994 "P"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133122 "R"
	protected explicit_type "cv::Mat"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133250 "height"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133378 "width"
	protected explicit_type "int"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133506 "faceDetectorPath"
	protected explicit_type "std::string"
	init_value "=  \"../haarcascade_frontalface_default.xml\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133634 "poseEstimatorPath"
	protected explicit_type "std::string"
	init_value "=  \"../trees/\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133762 "cameraInfoPath"
	class_attribute protected explicit_type "std::string"
	init_value "= \"camera_info.yaml\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 133890 "cameraInfoPathHasChanged"
	class_attribute protected explicit_type "bool"
	init_value "= false"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 130818 "MatSet"
      visibility package stereotype "template_typedef"
      cpp_decl "${comment}${template}using ${name} = ${inherit};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 130818 // <generalisation>
	relation 130818 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 130818 // <generalisation>
	  b parent class_ref 130946 // typedef2
      end
    end

    class 130946 "typedef2"
      visibility package stereotype "typedef" explicit_base_type "std::vector<std::vector<cv::Mat>>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 131074 "SVMSteinMatrix"
      visibility package stereotype "typedef" explicit_base_type "std::vector<std::vector<SVMStein>>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end

    class 131202 "SVMManager"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 154626 "SVMManager"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 1
	  param in name "c" explicit_type "int"
	    defaultvalue "3"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 154754 "generateLabels"
	preserve_cpp_body_indent protected explicit_return_type "vector<string>"
	nparams 1
	  param in name "numOfLabels" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment " utility functions"
      end

      class 131330 "ImgType"
	visibility package stereotype "enum_class"
	cpp_decl "${comment}enum class ${name} {
${items}};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	mysql_decl ""
	
	attribute 134018 "grayscale"
	  public type class_ref 131330 // ImgType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end

	attribute 134146 "depthmap"
	  public type class_ref 131330 // ImgType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	  mysql_decl ""
	  MysqlColumn
	end
      end

      attribute 134274 "c"
	protected explicit_type "int"
	init_value "=  3"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of head rotation subsets for each identity"
      end

      attribute 134402 "N"
	protected explicit_type "int"
	init_value "=  0"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${h_value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " number of identities provided for training"
      end

      attribute 134530 "IDs"
	protected explicit_type "std::string"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " labels associated to each identity in the same order as in grayscaleSVMs and depthmapSVMs"
      end

      classrelation 130946 // grayscaleSVMs (<directional composition>)
	relation 130946 *-->
	  a role_name "grayscaleSVMs" protected
	    comment " a row for each identity and a column for each head rotation subset"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 130946 // grayscaleSVMs (<directional composition>)
	  b parent class_ref 131074 // SVMSteinMatrix
      end

      classrelation 131074 // depthmapSVMs (<directional composition>)
	relation 131074 *-->
	  a role_name "depthmapSVMs" protected
	    comment " thus resulting in a Nxc matrix where N is the number of identities"
	    cpp default "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 131074 // depthmapSVMs (<directional composition>)
	  b parent class_ref 131074 // SVMSteinMatrix
      end
    end

    class 131458 "SteinKernelParams"
      visibility package stereotype "struct"
      cpp_decl "${comment}${template}struct ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      operation 154882 "SteinKernelParams"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "C" explicit_type "float"
	    defaultvalue "1"
	  param in name "gamma" explicit_type "float"
	    defaultvalue "1"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw}${abstract} : C(C), gamma(gamma) { };
"
	
	
	
	
      end

      attribute 134658 "C"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      attribute 134786 "gamma"
	public explicit_type "float"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end
    end

    class 131586 "SVMStein"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      comment "@brief The SVMmodel class is a Stein kernel SVM model
"
      operation 155010 "SVMStein"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 155138 "SVMStein"
	public explicit_return_type ""
	nparams 1
	  param in name "filename" explicit_type "std::string"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}const ${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 155266 "predict"
	const public explicit_return_type "float"
	nparams 1
	  param in name "samples" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief predict gives the calss of an input sample
@param samples: row vector representing a sample
@return predicted class, 1 or -1
"
      end

      operation 155394 "getDistanceFromHyperplane"
	const public explicit_return_type "float"
	nparams 1
	  param in name "sample" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief getDistanceFromHyperplane gives the distance of a sample point
       from the optimal separating hyperplane
@param sample
@return euclidean point-plane distance
"
      end

      operation 155522 "train"
	public explicit_return_type "bool"
	nparams 2
	  param in name "data" explicit_type "cv::Mat"
	  param in name "labelsVector" explicit_type "std::vector<int>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 155650 "trainAuto"
	public return_type class_ref 131458 // SteinKernelParams
	nparams 4
	  param in name "data" explicit_type "cv::Mat"
	  param in name "labelsVector" explicit_type "std::vector<int>"
	  param in name "gammaGrid" explicit_type "cv::ml::ParamGrid"
	    defaultvalue "cv::ml::SVM::getDefaultGrid(cv::ml::SVM::GAMMA)"
	  param in name "CGrid" explicit_type "cv::ml::ParamGrid"
	    defaultvalue "cv::ml::SVM::getDefaultGrid(cv::ml::SVM::C)"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief trainAuto automatically chooses the best values for C and sigma parameters
       performing a grid search (without cross validation because of the small number of
       positive samples)
@param targetPerson
@param otherPeople
@param gammaGrid
@param CGrid
@return
"
      end

      operation 155778 "evaluate"
	public explicit_return_type "float"
	nparams 2
	  param in name "validationData" explicit_type "cv::Mat"
	  param in name "groundTruth" explicit_type "cv::Mat"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief evaluates the trained svm accuracy
@param validationData: Nxp CV_32FC1 matrix, where N is the number of samples
       and p is the number of features
@param groundTruth: 1xN CV_32FC1 matrix containing ground truth
       classification labels (1 or -1)
@return percentage of correct classifications (between 0 and 1)
"
      end

      operation 155906 "load"
	public explicit_return_type "bool"
	nparams 1
	  param in name "filename" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156034 "save"
	const public explicit_return_type "void"
	nparams 1
	  param in name "filename" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156162 "setC"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "C" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156290 "setGamma"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "gamma" explicit_type "float"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156418 "setParams"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 1
	  param in name "params" type class_ref 131458 // SteinKernelParams
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 156546 "matVectorToMat"
	class_operation public explicit_return_type "cv::Mat"
	nparams 1
	  param in name "data" explicit_type "std::vector<cv::Mat>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief matVectorToMat converts a vector of Mat in a single Mat in which
every row represents a Mat in row-major order
@param data a vector of Mat
@return a Mat representing the input vector of Mat
"
      end

      attribute 134914 "svm"
	private explicit_type "cv::ml::SVM"
	stereotype "cv::Ptr"
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
      end

      operation 156674 "evaluateFMeasure"
	private explicit_return_type "float"
	nparams 2
	  param in name "data" explicit_type "cv::Mat"
	  param in name "labels" explicit_type "std::vector<int>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief evaluates the trained svm accuracy
@param validationData: Nxp CV_32FC1 matrix, where N is the number of samples
       and p is the number of features
@param groundTruth: 1xN CV_32FC1 matrix containing ground truth
       classification labels (1 or -1)
@return percentage of correct classifications (between 0 and 1)
"
      end
    end

    class 131714 "SVMTester"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 131202 // <generalisation>
	relation 131202 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 131202 // <generalisation>
	  b parent class_ref 131202 // SVMManager
      end

      attribute 135042 "unknownIdentity"
	class_attribute const_attribute public explicit_type "std::string"
	init_value "= \"unknown_ID\""
	cpp_decl "    ${comment}${static}${thread_local}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
	mysql_decl ""
	MysqlColumn
	comment " unknown identity label"
      end

      operation 156802 "SVMTester"
	public explicit_return_type ""
	nparams 1
	  param in name "c" explicit_type "int"
	    defaultvalue "3"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 156930 "predict"
	const public explicit_return_type "std::string"
	nparams 1
	  param in name "identity" type class_ref 129154 // Image4DComponent
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief predict predicts the identity of the given face set
@param identity: various Faces of the same person
@return person label if the identity was in the training samples and is recognized,
        unknownIdentity otherwise
"
      end

      operation 157058 "load"
	public explicit_return_type "bool"
	nparams 1
	  param in name "directoryName" explicit_type "string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief loads a pretrained model
@param fileName: path of the folder containing the pretrained models
@return true if succedes
"
      end

      operation 157186 "formatDataForPrediction"
	const private explicit_return_type "Mat"
	nparams 1
	  param in name "data" explicit_type "vector<Mat>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 131842 "SVMTrainer"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 131330 // <generalisation>
	relation 131330 ---|>
	  a private
	    cpp default "${type}"
	    classrelation_ref 131330 // <generalisation>
	  b parent class_ref 131202 // SVMManager
      end

      operation 157314 "SVMTrainer"
	preserve_cpp_body_indent public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 157442 "train"
	preserve_cpp_body_indent public explicit_return_type "void"
	nparams 2
	  param inout name "trainingSamples" type class_ref 129154 // Image4DComponent
	  param in name "samplIDs" explicit_type "vector<string>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "    SVMTrainer(const std::string& fileName);

@brief Given a vector of faces trains an SVM model to recognize those faces
@param trainingSamples: a set faces of a different person, clusterized by pose and with
                        and normalized covariances matrix
@param labels: labels to be assigned to each identity; these labels will be returned
               by FaceRecognizer::predict() when identifies a person
"
      end

      operation 157570 "save"
	public explicit_return_type "bool"
	nparams 1
	  param in name "directoryName" explicit_type "std::string"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
	comment "@brief saves a trained model
@param fileName: path to save the model to
@return true if saved as expected
"
      end

      operation 157698 "trainSVMs"
	private explicit_return_type "void"
	nparams 3
	  param inout name "data" explicit_type "cv::Mat"
	  param in name "indexes" explicit_type "std::vector<int>"
	  param in name "svmToTrain" explicit_type "ImgType"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, const ${t1} & ${p1}, ${t2} ${p2}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 157826 "removeRows"
	const private explicit_return_type "cv::Mat"
	nparams 4
	  param inout name "data" explicit_type "cv::Mat"
	  param inout name "removed" explicit_type "cv::Mat"
	  param in name "baseIdIndex" explicit_type "int"
	  param in name "subset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 157954 "restoreRows"
	const private explicit_return_type "void"
	nparams 4
	  param inout name "data" explicit_type "cv::Mat"
	  param inout name "removed" explicit_type "cv::Mat"
	  param in name "baseIdIndex" explicit_type "int"
	  param in name "subset" explicit_type "int"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, ${t2} ${p2}, ${t3} ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 158082 "formatDataForTraining"
	preserve_cpp_body_indent private explicit_return_type "Mat"
	nparams 2
	  param in name "data" type class_ref 130818 // MatSet
	  param inout name "indexes" explicit_type "std::vector<int>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "//@brief formatDataForTraining transforms the input dataset in a suitable format to be used by
//       grayscaleSVMs and depthmapSVMs
//@param data: vector of identities. For each identity it contains a vector of covariance matrixes
//@param indexes: a vector with the starting rows indexes for each identity (with length = dataIn.size())
//
//@return formatted data to be feed into SVMModel. It has one row for each Mat contained in dataIn
//        and a number of columns equal to Mat::rows x Mat::columns (assuming every Mat in dataIn
//        has the same dimensions)
//

${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}, ${t1} & ${p1}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end
    end

    class 131970 "Image4DMatrix"
      visibility package stereotype "template_typedef"
      cpp_decl "${comment}${template}using ${name} = ${inherit};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
      classrelation 131458 // <generalisation>
	relation 131458 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 131458 // <generalisation>
	  b parent class_ref 132098 // typedef3
      end
    end

    class 132098 "typedef3"
      visibility package stereotype "typedef" explicit_base_type "std::vector<std::vector<Image4DLeaf>>"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      mysql_decl ""
      
    end
  end

  deploymentview 128386 "include"
    //deployment diagram settings
    deploymentdiagramsettings
     end
    artifact 128642 "covariancecomputer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 128898 // CovarianceComputer
      end
    end

    artifact 128770 "facecropper"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 129282 // FaceCropper
      end
    end

    artifact 128898 "filter"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 129026 // Filter
      end
    end

    artifact 129154 "image4dcomponent"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 129154 // Image4DComponent
      end
    end

    artifact 129282 "image4dleaf"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 129666 // Image4DLeaf
      end
    end

    artifact 129410 "image4dloader"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 129794 // Image4DLoader
      end
    end

    artifact 129538 "image4dvectorcomposite"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 129922 // Image4DVectorComposite
      end
    end

    artifact 129666 "kmeansbackgroundremover"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 130050 // KmeansBackgroundRemover
      end
    end

    artifact 129794 "poseclusterizer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 130306 // typedef1
	class_ref 130178 // Pose
	class_ref 130434 // PoseClusterizer
      end
    end

    artifact 129922 "preprocessorpipe"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 130562 // PreprocessorPipe
      end
    end

    artifact 130050 "settings"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 130690 // Settings
      end
    end

    artifact 130178 "svmmanager"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 130946 // typedef2
	class_ref 130818 // MatSet
	class_ref 131074 // SVMSteinMatrix
	class_ref 131202 // SVMManager
      end
    end

    artifact 130306 "svmstein"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 131458 // SteinKernelParams
	class_ref 131586 // SVMStein
      end
    end

    artifact 130434 "svmtester"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 131714 // SVMTester
      end
    end

    artifact 130562 "svmtrainer"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 131842 // SVMTrainer
      end
    end

    artifact 130690 "test"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_elems
	class_ref 132098 // typedef3
	class_ref 131970 // Image4DMatrix
      end
    end
  end

  package_ref 128770 // include
end
